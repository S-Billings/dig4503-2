Jan 15, 2020
Objects have properties and functions, and have 3 possible relationships (is a, has a, none). "extends" gives an is a relationship. "properties" gives a has a relationship.  

class example {
    constructor(name){
        //can pass values through a constructor and set default properties. 

        this.name = name; //means whatever is passed in will become the property name for the class. 
    }

    speak() {
        //can access properties in the constructor. 
    }
}

Jan 22, 2020

JS XML (JSX)
    1. one root element (wrapping)
    2. all elements must close
    3. JS expressions are allowed, statements are not
        NOT ALLOWED: not equal, <, >, else, for(), while()
        ALLOWED: functions, variables (have values)
            let para = <p>Hi!</p>;
                instead...
            let value = 7;
            para = <p>{vlaue}</p>;

JSX + WebPack
    components are elements
        <example 1>
            ->new Example()
            -> Example.render()
    1. components take care of themselves
    2. all componenets can render        

    nmp run build // will make everything ready to drop on a server

Jan 27, 2020
Server-side
    HTTP based on the client-server model where the client sends requests and the server sends a response
        Methods: GET, POST

    URL can be broken down into 3 categories for http://google.com:80/video/somehting
        1. Protocol (http://)

        2. Server (google.com) + Port (80), ports are always there and are typically assumed to be port 80 [65,535 possible ports, anything less than 100 is already dedicated. 80 is web server/HTTP. 27 is FTP. 443 is HTTPS]
        
        3. Path (/video/something)

            Server: GET / index.html 
            Client: localhost/index.html

Express: instead of using HTTP, use express that is based on and uses HTTP (don't reinvent the wheel)
    Based in Node
        index.js
            const Express = require ("express");
            const App = Express(); //app is equal to a new express
            app listen (80, function() {
                console.log ('server running');
            })

node index.js //Callback Function: "when something happens, call me"
    ctr + c //breaks server

npm install nodemon


New project:
    mkdir example
    cd example
    npm init -y
    npm install express
    (recommend after installation to open VSC for node projects)

Feb 5, 2020
Midterm (30 questions, multiple choice, T/F, Fill in the blank)

REST: 
    collection/item
    many/one

Errors